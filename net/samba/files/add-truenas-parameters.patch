From 59aaf6304dc264f6abd8e3e1d376970702c248ff Mon Sep 17 00:00:00 2001
From: = <=>
Date: Mon, 3 May 2021 09:45:21 -0400
Subject: [PATCH] Add TrueNAS-specific custom Samba parameters

Add parameters specifically related to iX hardware or underlying
OS. These are control behavior that is required for quirks of
legacy hardware or configuraitons (with the exception of a flag
for handling kernel dosmodes).
---
 .../smbdotconf/base/allowdatasetcreation.xml  | 11 ++++++++
 .../base/enablewebservicediscovery.xml        | 11 ++++++++
 docs-xml/smbdotconf/domain/adsdnsupdate.xml   | 10 +++++++
 .../smbdotconf/filename/kerneldosmodes.xml    | 13 +++++++++
 docs-xml/smbdotconf/misc/smbdmaxxattrsize.xml | 28 +++++++++++++++++++
 .../winbind/winbindnetbiosaliasspn.xml        | 12 ++++++++
 lib/param/loadparm.c                          |  4 +++
 source3/libnet/libnet_join.c                  |  8 ++++++
 source3/param/loadparm.c                      |  6 ++++
 source3/utils/net_ads.c                       |  4 +++
 10 files changed, 107 insertions(+)
 create mode 100644 docs-xml/smbdotconf/base/allowdatasetcreation.xml
 create mode 100644 docs-xml/smbdotconf/base/enablewebservicediscovery.xml
 create mode 100644 docs-xml/smbdotconf/domain/adsdnsupdate.xml
 create mode 100644 docs-xml/smbdotconf/filename/kerneldosmodes.xml
 create mode 100644 docs-xml/smbdotconf/misc/smbdmaxxattrsize.xml
 create mode 100644 docs-xml/smbdotconf/winbind/winbindnetbiosaliasspn.xml

diff --git a/docs-xml/smbdotconf/base/allowdatasetcreation.xml b/docs-xml/smbdotconf/base/allowdatasetcreation.xml
new file mode 100644
index 00000000000..7fa377c3aa9
--- /dev/null
+++ b/docs-xml/smbdotconf/base/allowdatasetcreation.xml
@@ -0,0 +1,11 @@
+<samba:parameter name="allow dataset creation"
+                 type="boolean"
+                 context="G"
+                 xmlns:samba="http://www.samba.org/samba/DTD/samba-doc">
+<description>
+        <para>Allow automatic creation of ZFS datasets when creating
+	shares through the NT Server Manager.</para>
+
+</description>
+<value type="default">no</value>
+</samba:parameter>
diff --git a/docs-xml/smbdotconf/base/enablewebservicediscovery.xml b/docs-xml/smbdotconf/base/enablewebservicediscovery.xml
new file mode 100644
index 00000000000..949539378cd
--- /dev/null
+++ b/docs-xml/smbdotconf/base/enablewebservicediscovery.xml
@@ -0,0 +1,11 @@
+<samba:parameter name="enable web service discovery"
+                 type="boolean"
+                 context="G"
+                 xmlns:samba="http://www.samba.org/samba/DTD/samba-doc">
+<description>
+        <para>Enable Web Services Dynamic Discovery (WS-Discovery) to
+        make samba_server appear in Network Neighborhood on Windows
+        clients.</para>
+</description>
+<value type="default">no</value>
+</samba:parameter>
diff --git a/docs-xml/smbdotconf/domain/adsdnsupdate.xml b/docs-xml/smbdotconf/domain/adsdnsupdate.xml
new file mode 100644
index 00000000000..ee113b12ea7
--- /dev/null
+++ b/docs-xml/smbdotconf/domain/adsdnsupdate.xml
@@ -0,0 +1,10 @@
+<samba:parameter name="ads dns update"
+                 context="G"
+                 type="boolean"
+                 xmlns:samba="http://www.samba.org/samba/DTD/samba-doc">
+<description>
+	<para>This option sets whether Samba should do AD DNS updates.</para>
+</description>
+<value type="default">yes</value>
+<value type="example">no</value>
+</samba:parameter>
diff --git a/docs-xml/smbdotconf/filename/kerneldosmodes.xml b/docs-xml/smbdotconf/filename/kerneldosmodes.xml
new file mode 100644
index 00000000000..b0808a436c5
--- /dev/null
+++ b/docs-xml/smbdotconf/filename/kerneldosmodes.xml
@@ -0,0 +1,13 @@
+<samba:parameter name="kernel dosmodes"
+                 context="S"
+                 type="boolean"
+                 xmlns:samba="http://www.samba.org/samba/DTD/samba-doc">
+<description>
+	<para>
+	This parameter is set to indicate that server supports kernel dosmodes.
+	In case they are enabled, normal dosmode storage in xattr / posix mode are bypassed
+	in favor of direct call to relevant SET/FSET_DOS_ATTRIBUTES vfs function.
+	</para>
+</description>
+<value type="default">no</value>
+</samba:parameter>
diff --git a/docs-xml/smbdotconf/misc/smbdmaxxattrsize.xml b/docs-xml/smbdotconf/misc/smbdmaxxattrsize.xml
new file mode 100644
index 00000000000..3ae91a37890
--- /dev/null
+++ b/docs-xml/smbdotconf/misc/smbdmaxxattrsize.xml
@@ -0,0 +1,28 @@
+<samba:parameter name="smbd max xattr size"
+                 context="S"
+                 type="integer"
+                 xmlns:samba="http://www.samba.org/samba/DTD/samba-doc">
+<description>
+	<para>
+	  This parameter controls the maximum size of extended attributes
+	  that may be written to the server as EAs or as alternate data
+	  streams if vfs_streams_xattr is enabled. The maximum size of
+	  extended attributes depends on the Samba server's operating system
+	  and the underlying filesystem. The Linux VFS currently sets an
+	  upper boundary of 64 KiB per extended attribute. FreeBSD does not
+	  set a practical upper limit, but since pread() and pwrite() are not
+	  possible via the extattr on FreeBSD, it is not recommended to
+	  increase this value above a few MiB.
+
+	  If a client attempts to write an overly-large alternate datastream,
+	  the Samba server will return STATUS_FILESYSTEM_LIMITATION.
+	  If this error is encountered, users may try increasing the maximum
+	  size supported for xattr writes. If this is not possible, and
+	  writes are from a MacOS client and to an AFP_Resource extended
+	  attribute, the user may enable the vfs_fruit module and configure
+	  to allow stream writes for AFP_Resource to an alternative storage
+	  location. See vfs_fruit documentation for further details.
+	</para>
+</description>
+<value type="default">65536</value>
+</samba:parameter>
diff --git a/docs-xml/smbdotconf/winbind/winbindnetbiosaliasspn.xml b/docs-xml/smbdotconf/winbind/winbindnetbiosaliasspn.xml
new file mode 100644
index 00000000000..6979955a101
--- /dev/null
+++ b/docs-xml/smbdotconf/winbind/winbindnetbiosaliasspn.xml
@@ -0,0 +1,12 @@
+<samba:parameter name="winbind netbios alias spn"
+		context="G"
+		type="boolean"
+		xmlns:samba="http://www.samba.org/samba/DTD/samba-doc">
+<description>
+	<para>This parameter is designed to control whether netbios alias should
+	be added to the spn during domain join.
+	</para>
+</description>
+<value type="default">yes</value>
+<value type="example">no</value>
+</samba:parameter>
diff --git a/lib/param/loadparm.c b/lib/param/loadparm.c
index 3548c47d857..b78c1a50856 100644
--- a/lib/param/loadparm.c
+++ b/lib/param/loadparm.c
@@ -3090,6 +3090,10 @@ struct loadparm_context *loadparm_init(TALLOC_CTX *mem_ctx)
 				  "client smb encrypt",
 				  "default");
 
+	lpcfg_do_global_parameter(lp_ctx,
+				  "smbd max xattr size",
+				  "65536");
+
 	for (i = 0; parm_table[i].label; i++) {
 		if (!(lp_ctx->flags[i] & FLAG_CMDLINE)) {
 			lp_ctx->flags[i] |= FLAG_DEFAULT;
diff --git a/source3/libnet/libnet_join.c b/source3/libnet/libnet_join.c
index bd3aeec9434..e4bb9ad56c1 100644
--- a/source3/libnet/libnet_join.c
+++ b/source3/libnet/libnet_join.c
@@ -569,6 +569,13 @@ static ADS_STATUS libnet_join_set_machine_spn(TALLOC_CTX *mem_ctx,
 		goto done;
 	}
 
+	/*
+	 * Workaround for legacy HA systems. Below parameter defaults to 'true'
+	 * If it is not set to 'false' on legacy HA system, then domain join
+	 * will fail on one of the nodes due to constraint violation on
+	 * registering netbios SPN entries.
+	 */
+	if (lp_winbind_netbios_alias_spn()) {
 	for (netbios_aliases = lp_netbios_aliases();
 	     netbios_aliases != NULL && *netbios_aliases != NULL;
 	     netbios_aliases++) {
@@ -608,6 +615,7 @@ static ADS_STATUS libnet_join_set_machine_spn(TALLOC_CTX *mem_ctx,
 			goto done;
 		}
 	}
+	} /* End workaround for legacy HA kerberos issues */
 
 	for (addl_hostnames = lp_additional_dns_hostnames();
 	     addl_hostnames != NULL && *addl_hostnames != NULL;
diff --git a/source3/param/loadparm.c b/source3/param/loadparm.c
index acb4d149f0b..1ce352d4774 100644
--- a/source3/param/loadparm.c
+++ b/source3/param/loadparm.c
@@ -196,6 +196,8 @@ static const struct loadparm_service _sDefault =
 	.map_hidden = false,
 	.map_archive = true,
 	.store_dos_attributes = true,
+	.kernel_dosmodes = false,
+	.smbd_max_xattr_size = 65536,
 	.dmapi_support = false,
 	.locking = true,
 	.strict_locking = Auto,
@@ -693,6 +695,7 @@ static void init_globals(struct loadparm_context *lp_ctx, bool reinit_globals)
 #endif
 	Globals.time_server = false;
 	Globals.bind_interfaces_only = false;
+	Globals.enable_web_service_discovery = false;
 	Globals.unix_password_sync = false;
 	Globals.pam_password_change = false;
 	Globals.passwd_chat_debug = false;
@@ -724,6 +727,9 @@ static void init_globals(struct loadparm_context *lp_ctx, bool reinit_globals)
 	Globals.log_writeable_files_on_exit = false;
 	Globals.create_krb5_conf = true;
 	Globals.include_system_krb5_conf = true;
+	Globals.winbind_netbios_alias_spn = true;
+	Globals.ads_dns_update = 1;
+	Globals.allow_dataset_creation = false;
 	Globals._winbind_max_domain_connections = 1;
 
 	/* hostname lookups can be very expensive and are broken on
diff --git a/source3/utils/net_ads.c b/source3/utils/net_ads.c
index c8b18a9c281..abd28a9445c 100644
--- a/source3/utils/net_ads.c
+++ b/source3/utils/net_ads.c
@@ -1763,6 +1763,10 @@ static void _net_ads_join_dns_updates(struct net_context *c, TALLOC_CTX *ctx, st
 		return;
 	}
 
+	if (!lp_ads_dns_update()) {
+		return;
+	}
+
 	if (!r->out.domain_is_ad) {
 		return;
 	}
-- 
2.31.1

